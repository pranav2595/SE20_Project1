{"ast":null,"code":"import _defineProperty from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\src\\\\components\\\\profile\\\\EditDetails.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../../util/MyButton'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { editUserDetails } from '../../redux/actions/userActions'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle'; // Icons\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme, {\n    button: {\n      float: 'right'\n    }\n  });\n};\n\nvar EditDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditDetails, _Component);\n\n  function EditDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      bio: '',\n      website: '',\n      location: '',\n      open: false\n    };\n\n    _this.mapUserDetailsToState = function (credentials) {\n      _this.setState({\n        bio: credentials.bio ? credentials.bio : '',\n        website: credentials.website ? credentials.website : '',\n        location: credentials.location ? credentials.location : ''\n      });\n    };\n\n    _this.handleOpen = function () {\n      var credentials = _this.props.credentials;\n\n      _this.setState({\n        open: true\n      });\n\n      _this.mapUserDetailsToState(credentials);\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function () {\n      var userData = {\n        bio: _this.state.bio,\n        website: _this.state.website,\n        location: _this.state.location\n      };\n      var editUserDetails = _this.props.editUserDetails; //this.props.editUserDetails(userData);\n\n      editUserDetails(userData);\n\n      _this.handleClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(EditDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var credentials = this.props.credentials;\n      this.mapUserDetailsToState(credentials);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(MyButton, {\n        tip: \"Edit Details\",\n        onClick: this.handleOpen,\n        btnClassName: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Edit your details\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"bio\",\n        tpye: \"text\",\n        label: \"Bio\",\n        multiline: true,\n        rows: \"3\",\n        placeholder: \"A short bio about yourself\",\n        className: classes.textField,\n        value: this.state.bio,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"website\",\n        tpye: \"text\",\n        label: \"Website\",\n        placeholder: \"Your personal/professinal website\",\n        className: classes.textField,\n        value: this.state.website,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        name: \"location\",\n        tpye: \"text\",\n        label: \"Location\",\n        placeholder: \"Where you live\",\n        className: classes.textField,\n        value: this.state.location,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Save\"))));\n    }\n  }]);\n\n  return EditDetails;\n}(Component);\n\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    credentials: state.user.credentials\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editUserDetails: editUserDetails\n})(withStyles(styles)(EditDetails));","map":{"version":3,"sources":["D:\\sem 3\\SE\\SE20_Project1\\social_media_client\\src\\components\\profile\\EditDetails.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","connect","editUserDetails","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","EditIcon","styles","theme","button","float","EditDetails","state","bio","website","location","open","mapUserDetailsToState","credentials","setState","handleOpen","props","handleClose","handleChange","event","target","name","value","handleSubmit","userData","classes","textField","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme,\r\n  button: {\r\n    float: 'right'\r\n  }\r\n});\r\n\r\nclass EditDetails extends Component {\r\n  state = {\r\n    bio: '',\r\n    website: '',\r\n    location: '',\r\n    open: false\r\n  };\r\n  mapUserDetailsToState = (credentials) => {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : '',\r\n      website: credentials.website ? credentials.website : '',\r\n      location: credentials.location ? credentials.location : ''\r\n    });\r\n  };\r\n  handleOpen = () => {\r\n    const { credentials } = this.props;\r\n    this.setState({ open: true });\r\n    this.mapUserDetailsToState(credentials);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  componentDidMount() {\r\n    const { credentials } = this.props;\r\n    this.mapUserDetailsToState(credentials);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const userData = {\r\n      bio: this.state.bio,\r\n      website: this.state.website,\r\n      location: this.state.location\r\n    };\r\n    const { editUserDetails } = this.props;\r\n    //this.props.editUserDetails(userData);\r\n    editUserDetails(userData);\r\n    this.handleClose();\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Edit Details\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.button}\r\n        >\r\n          <EditIcon color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Edit your details</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                tpye=\"text\"\r\n                label=\"Bio\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"A short bio about yourself\"\r\n                className={classes.textField}\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"website\"\r\n                tpye=\"text\"\r\n                label=\"Website\"\r\n                placeholder=\"Your personal/professinal website\"\r\n                className={classes.textField}\r\n                value={this.state.website}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                tpye=\"text\"\r\n                label=\"Location\"\r\n                placeholder=\"Where you live\"\r\n                className={classes.textField}\r\n                value={this.state.location}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n  editUserDetails: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  credentials: state.user.credentials\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editUserDetails }\r\n)(withStyles(styles)(EditDetails));\r\n"]},"metadata":{},"sourceType":"module"}