{"ast":null,"code":"import { SET_SCREAMS, LOADING_DATA, LIKE_SCREAM, UNLIKE_SCREAM, DELETE_SCREAM, SET_ERRORS, POST_SCREAM, CLEAR_ERRORS, LOADING_UI, SET_SCREAM, STOP_LOADING_UI, SUBMIT_COMMENT } from '../types';\nimport axios from 'axios'; // Get all screams\n\nexport var getScreams = function getScreams() {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get('/screams').then(function (res) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: []\n      });\n    });\n  };\n};\nexport var getScream = function getScream(screamId) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.get(\"/scream/\".concat(screamId)).then(function (res) {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({\n        type: STOP_LOADING_UI\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Post a scream\n\nexport var postScream = function postScream(newScream) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_UI\n    });\n    axios.post('/scream', newScream).then(function (res) {\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Like a scream\n\nexport var likeScream = function likeScream(screamId) {\n  return function (dispatch) {\n    axios.get(\"/scream/\".concat(screamId, \"/like\")).then(function (res) {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Unlike a scream\n\nexport var unlikeScream = function unlikeScream(screamId) {\n  return function (dispatch) {\n    axios.get(\"/scream/\".concat(screamId, \"/unlike\")).then(function (res) {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n}; // Submit a comment\n\nexport var submitComment = function submitComment(screamId, commentData) {\n  return function (dispatch) {\n    axios.post(\"/scream/\".concat(screamId, \"/comment\"), commentData).then(function (res) {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    }).catch(function (err) {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var deleteScream = function deleteScream(screamId) {\n  return function (dispatch) {\n    axios.delete(\"/scream/\".concat(screamId)).then(function () {\n      dispatch({\n        type: DELETE_SCREAM,\n        payload: screamId\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var getUserData = function getUserData(userHandle) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING_DATA\n    });\n    axios.get(\"/user/\".concat(userHandle)).then(function (res) {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data.screams\n      });\n    }).catch(function () {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: null\n      });\n    });\n  };\n};\nexport var clearErrors = function clearErrors() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n};","map":{"version":3,"sources":["D:\\sem 3\\SE\\SE20_Project1\\social_media_client\\src\\redux\\actions\\dataActions.js"],"names":["SET_SCREAMS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","DELETE_SCREAM","SET_ERRORS","POST_SCREAM","CLEAR_ERRORS","LOADING_UI","SET_SCREAM","STOP_LOADING_UI","SUBMIT_COMMENT","axios","getScreams","dispatch","type","get","then","res","payload","data","catch","err","getScream","screamId","console","log","postScream","newScream","post","clearErrors","response","likeScream","unlikeScream","submitComment","commentData","deleteScream","delete","getUserData","userHandle","screams"],"mappings":"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","sourcesContent":["import {\r\n  SET_SCREAMS,\r\n  LOADING_DATA,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  SET_ERRORS,\r\n  POST_SCREAM,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_SCREAM,\r\n  STOP_LOADING_UI,\r\n  SUBMIT_COMMENT\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\n// Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get('/screams')\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: []\r\n      });\r\n    });\r\n};\r\nexport const getScream = (screamId) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .get(`/scream/${screamId}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch({ type: STOP_LOADING_UI });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Post a scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post('/scream', newScream)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: POST_SCREAM,\r\n        payload: res.data\r\n      });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\n// Like a scream\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .get(`/scream/${screamId}/like`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LIKE_SCREAM,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Unlike a scream\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .get(`/scream/${screamId}/unlike`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UNLIKE_SCREAM,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n// Submit a comment\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n  axios\r\n    .post(`/scream/${screamId}/comment`, commentData)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUBMIT_COMMENT,\r\n        payload: res.data\r\n      });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    });\r\n};\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n  axios\r\n    .delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get(`/user/${userHandle}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: res.data.screams\r\n      });\r\n    })\r\n    .catch(() => {\r\n      dispatch({\r\n        type: SET_SCREAMS,\r\n        payload: null\r\n      });\r\n    });\r\n};\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}