{"ast":null,"code":"import _classCallCheck from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\src\\\\components\\\\layout\\\\Notifications.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types'; // MUI stuff\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge'; // Icons\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux\n\nimport { connect } from 'react-redux';\nimport { markNotificationsRead } from '../../redux/actions/userActions';\nimport mapStateToProps from \"react-redux/lib/connect/mapStateToProps\";\n\nvar Notifications =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Notifications, _Component);\n\n  function Notifications() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Notifications);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Notifications)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      anchorEl: null\n    };\n\n    _this.handleOpen = function (event) {\n      _this.setState({\n        anchorEl: event.target\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.onMenuOpened = function () {\n      var unreadNotificationsIds = _this.props.notifications.filter(function (not) {\n        return !not.read;\n      }).map(function (not) {\n        return not.notificationId;\n      });\n\n      _this.props.markNotificationsRead(unreadNotificationsIds);\n    };\n\n    return _this;\n  }\n\n  _createClass(Notifications, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notifications = this.props.notifications;\n      var anchorEl = this.state.anchorEl;\n      dayjs.extend(relativeTime);\n      var notificationsIcon;\n\n      if (notifications && notifications.length > 0) {\n        notifications.filter(function (not) {\n          return not.read === false;\n        }).length > 0 ? notificationsIcon = React.createElement(Badge, {\n          badgeContent: notifications.filter(function (not) {\n            return not.read === false;\n          }).length,\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(NotificationsIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })) : notificationsIcon = React.createElement(NotificationsIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      } else {\n        notificationsIcon = React.createElement(NotificationsIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }\n\n      var notificationsMarkup = notifications && notifications.length > 0 ? notifications.map(function (not) {\n        var verb = not.type === 'like' ? 'liked' : 'commented on';\n        var time = dayjs(not.createdAt).fromNow();\n        var iconColor = not.read ? 'primary' : 'secondary';\n        var icon = not.type === 'like' ? React.createElement(FavoriteIcon, {\n          color: iconColor,\n          style: {\n            marginRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }) : React.createElement(ChatIcon, {\n          color: iconColor,\n          style: {\n            marginRight: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n        return React.createElement(MenuItem, {\n          key: not.createdAt,\n          onClick: _this2.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, icon, React.createElement(Typography, {\n          component: Link,\n          color: \"default\",\n          variant: \"body1\",\n          to: \"/users/\".concat(not.recipient, \"/scream/\").concat(not.screamId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, not.sender, \" \", verb, \" your scream \", time));\n      }) : React.createElement(MenuItem, {\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"You have no notifications yet\");\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        placement: \"top\",\n        title: \"Notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-owns\": anchorEl ? 'simple-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, notificationsIcon)), React.createElement(Menu, {\n        anchorEl: anchorEl,\n        open: Boolean(anchorEl),\n        onClose: this.handleClose,\n        onEntered: this.onMenuOpened,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, notificationsMarkup));\n    }\n  }]);\n\n  return Notifications;\n}(Component);\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired\n}; // mapStateToProps name throws error.\n\nvar mapStateToProps2 = function mapStateToProps2(state) {\n  return {\n    notifications: state.user.notifications\n  };\n};\n\nexport default connect(mapStateToProps2, {\n  markNotificationsRead: markNotificationsRead\n})(Notifications);","map":{"version":3,"sources":["D:\\sem 3\\SE\\SE20_Project1\\social_media_client\\src\\components\\layout\\Notifications.js"],"names":["React","Component","Fragment","Link","dayjs","relativeTime","PropTypes","Menu","MenuItem","IconButton","Tooltip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotificationsRead","mapStateToProps","Notifications","state","anchorEl","handleOpen","event","setState","target","handleClose","onMenuOpened","unreadNotificationsIds","props","notifications","filter","not","read","map","notificationId","extend","notificationsIcon","length","notificationsMarkup","verb","type","time","createdAt","fromNow","iconColor","icon","marginRight","recipient","screamId","sender","undefined","Boolean","propTypes","func","isRequired","array","mapStateToProps2","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\n// MUI stuff\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\n// Icons\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\nimport mapStateToProps from \"react-redux/lib/connect/mapStateToProps\";\r\n\r\nclass Notifications extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n  handleOpen = (event) => {\r\n    this.setState({ anchorEl: event.target });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  onMenuOpened = () => {\r\n    let unreadNotificationsIds = this.props.notifications\r\n      .filter((not) => !not.read)\r\n      .map((not) => not.notificationId);\r\n    this.props.markNotificationsRead(unreadNotificationsIds);\r\n  };\r\n  render() {\r\n    const notifications = this.props.notifications;\r\n    const anchorEl = this.state.anchorEl;\r\n\r\n    dayjs.extend(relativeTime);\r\n\r\n    let notificationsIcon;\r\n    if (notifications && notifications.length > 0) {\r\n      notifications.filter((not) => not.read === false).length > 0\r\n        ? (notificationsIcon = (\r\n            <Badge\r\n              badgeContent={\r\n                notifications.filter((not) => not.read === false).length\r\n              }\r\n              color=\"secondary\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          ))\r\n        : (notificationsIcon = <NotificationsIcon />);\r\n    } else {\r\n      notificationsIcon = <NotificationsIcon />;\r\n    }\r\n    let notificationsMarkup =\r\n      notifications && notifications.length > 0 ? (\r\n        notifications.map((not) => {\r\n          const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n          const time = dayjs(not.createdAt).fromNow();\r\n          const iconColor = not.read ? 'primary' : 'secondary';\r\n          const icon =\r\n            not.type === 'like' ? (\r\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            ) : (\r\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            );\r\n\r\n          return (\r\n            <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n              {icon}\r\n              <Typography\r\n                component={Link}\r\n                color=\"default\"\r\n                variant=\"body1\"\r\n                to={`/users/${not.recipient}/scream/${not.screamId}`}\r\n              >\r\n                {not.sender} {verb} your scream {time}\r\n              </Typography>\r\n            </MenuItem>\r\n          );\r\n        })\r\n      ) : (\r\n        <MenuItem onClick={this.handleClose}>\r\n          You have no notifications yet\r\n        </MenuItem>\r\n      );\r\n    return (\r\n      <Fragment>\r\n        <Tooltip placement=\"top\" title=\"Notifications\">\r\n          <IconButton\r\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            {notificationsIcon}\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          onEntered={this.onMenuOpened}\r\n        >\r\n          {notificationsMarkup}\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNotifications.propTypes = {\r\n  markNotificationsRead: PropTypes.func.isRequired,\r\n  notifications: PropTypes.array.isRequired\r\n};\r\n\r\n// mapStateToProps name throws error.\r\nconst mapStateToProps2 = (state) => ({\r\n  notifications: state.user.notifications\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps2,\r\n  { markNotificationsRead }\r\n)(Notifications);\r\n"]},"metadata":{},"sourceType":"module"}