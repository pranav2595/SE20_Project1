{"ast":null,"code":"import _classCallCheck from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\src\\\\components\\\\scream\\\\Comments.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs'; // MUI\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme, {\n    commentImage: {\n      maxWidth: '100%',\n      height: 100,\n      objectFit: 'cover',\n      borderRadius: '50%'\n    },\n    commentData: {\n      marginLeft: 20\n    }\n  });\n};\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    _classCallCheck(this, Comments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comments).apply(this, arguments));\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          comments = _this$props.comments,\n          classes = _this$props.classes;\n      return React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, comments.map(function (comment, index) {\n        var body = comment.body,\n            createdAt = comment.createdAt,\n            userImage = comment.userImage,\n            userHandle = comment.userHandle;\n        return React.createElement(Fragment, {\n          key: createdAt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: userImage,\n          alt: \"comment\",\n          className: classes.commentImage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })), React.createElement(Grid, {\n          item: true,\n          sm: 9,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.commentData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h5\",\n          component: Link,\n          to: \"/users/\".concat(userHandle),\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, userHandle), React.createElement(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), React.createElement(\"hr\", {\n          className: classes.invisibleSeparator,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(Typography, {\n          variabnt: \"body1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, body))))), index !== comments.length - 1 && React.createElement(\"hr\", {\n          className: classes.visibleSeparator,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nComments.propTypes = {\n  comments: PropTypes.array.isRequired\n};\nexport default withStyles(styles)(Comments);","map":{"version":3,"sources":["D:\\sem 3\\SE\\SE20_Project1\\social_media_client\\src\\components\\scream\\Comments.js"],"names":["React","Component","Fragment","PropTypes","withStyles","Link","dayjs","Grid","Typography","styles","theme","commentImage","maxWidth","height","objectFit","borderRadius","commentData","marginLeft","Comments","props","comments","classes","map","comment","index","body","createdAt","userImage","userHandle","format","invisibleSeparator","length","visibleSeparator","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n// MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme,\r\n  commentImage: {\r\n    maxWidth: '100%',\r\n    height: 100,\r\n    objectFit: 'cover',\r\n    borderRadius: '50%'\r\n  },\r\n  commentData: {\r\n    marginLeft: 20\r\n  }\r\n});\r\n\r\nclass Comments extends Component {\r\n  render() {\r\n    const { comments, classes } = this.props;\r\n    return (\r\n      <Grid container>\r\n        {comments.map((comment, index) => {\r\n          const { body, createdAt, userImage, userHandle } = comment;\r\n          return (\r\n            <Fragment key={createdAt}>\r\n              <Grid item sm={12}>\r\n                <Grid container>\r\n                  <Grid item sm={2}>\r\n                    <img\r\n                      src={userImage}\r\n                      alt=\"comment\"\r\n                      className={classes.commentImage}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={9}>\r\n                    <div className={classes.commentData}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/users/${userHandle}`}\r\n                        color=\"primary\"\r\n                      >\r\n                        {userHandle}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                      </Typography>\r\n                      <hr className={classes.invisibleSeparator} />\r\n                      <Typography variabnt=\"body1\">{body}</Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {index !== comments.length - 1 && (\r\n                <hr className={classes.visibleSeparator} />\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n"]},"metadata":{},"sourceType":"module"}