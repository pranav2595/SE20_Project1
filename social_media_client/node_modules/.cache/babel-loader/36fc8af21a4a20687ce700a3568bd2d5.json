{"ast":null,"code":"import _classCallCheck from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\src\\\\components\\\\scream\\\\Scream.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeleteScream from './DeleteScream';\nimport ScreamDialog from './ScreamDialog';\nimport LikeButton from './LikeButton'; // MUI Stuff\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport ChatIcon from '@material-ui/icons/Chat'; // Redux\n\nimport { connect } from 'react-redux';\nvar styles = {\n  card: {\n    position: 'relative',\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n};\n\nvar Scream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scream, _Component);\n\n  function Scream() {\n    _classCallCheck(this, Scream);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Scream).apply(this, arguments));\n  }\n\n  _createClass(Scream, [{\n    key: \"render\",\n    value: function render() {\n      dayjs.extend(relativeTime);\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$scream = _this$props.scream,\n          body = _this$props$scream.body,\n          createdAt = _this$props$scream.createdAt,\n          userImage = _this$props$scream.userImage,\n          userHandle = _this$props$scream.userHandle,\n          screamId = _this$props$scream.screamId,\n          likeCount = _this$props$scream.likeCount,\n          commentCount = _this$props$scream.commentCount,\n          _this$props$user = _this$props.user,\n          authenticated = _this$props$user.authenticated,\n          handle = _this$props$user.credentials.handle;\n      var deleteButton = authenticated && userHandle === handle ? React.createElement(DeleteScream, {\n        screamId: screamId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : null;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        image: userImage,\n        title: \"Profile image\",\n        className: classes.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: Link,\n        to: \"/users/\".concat(userHandle),\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, userHandle), deleteButton, React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, dayjs(createdAt).fromNow()), React.createElement(Typography, {\n        variant: \"body1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, body), React.createElement(LikeButton, {\n        screamId: screamId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, likeCount, \" Likes\"), React.createElement(MyButton, {\n        tip: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ChatIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, commentCount, \" comments\"), React.createElement(ScreamDialog, {\n        screamId: screamId,\n        userHandle: userHandle,\n        openDialog: this.props.openDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Scream;\n}(Component);\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["D:\\sem 3\\SE\\SE20_Project1\\social_media_client\\src\\components\\scream\\Scream.js"],"names":["React","Component","withStyles","Link","dayjs","relativeTime","PropTypes","MyButton","DeleteScream","ScreamDialog","LikeButton","Card","CardContent","CardMedia","Typography","ChatIcon","connect","styles","card","position","display","marginBottom","image","minWidth","content","padding","objectFit","Scream","extend","props","classes","scream","body","createdAt","userImage","userHandle","screamId","likeCount","commentCount","user","authenticated","handle","credentials","deleteButton","fromNow","openDialog","propTypes","object","isRequired","bool","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\nimport LikeButton from './LikeButton';\r\n// MUI Stuff\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = {\r\n  card: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    marginBottom: 20\r\n  },\r\n  image: {\r\n    minWidth: 200\r\n  },\r\n  content: {\r\n    padding: 25,\r\n    objectFit: 'cover'\r\n  }\r\n};\r\n\r\nclass Scream extends Component {\r\n  render() {\r\n    dayjs.extend(relativeTime);\r\n    const {\r\n      classes,\r\n      scream: {\r\n        body,\r\n        createdAt,\r\n        userImage,\r\n        userHandle,\r\n        screamId,\r\n        likeCount,\r\n        commentCount\r\n      },\r\n      user: {\r\n        authenticated,\r\n        credentials: { handle }\r\n      }\r\n    } = this.props;\r\n\r\n    const deleteButton =\r\n      authenticated && userHandle === handle ? (\r\n        <DeleteScream screamId={screamId} />\r\n      ) : null;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          image={userImage}\r\n          title=\"Profile image\"\r\n          className={classes.image}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component={Link}\r\n            to={`/users/${userHandle}`}\r\n            color=\"primary\"\r\n          >\r\n            {userHandle}\r\n          </Typography>\r\n          {deleteButton}\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).fromNow()}\r\n          </Typography>\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} Likes</span>\r\n          <MyButton tip=\"comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} comments</span>\r\n          <ScreamDialog\r\n            screamId={screamId}\r\n            userHandle={userHandle}\r\n            openDialog={this.props.openDialog}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nScream.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openDialog: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n"]},"metadata":{},"sourceType":"module"}