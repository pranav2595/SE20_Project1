{"ast":null,"code":"import _defineProperty from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\sem 3\\\\SE\\\\SE20_Project1\\\\social_media_client\\\\src\\\\components\\\\scream\\\\CommentForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\nvar styles = function styles(theme) {\n  return _objectSpread({}, theme);\n};\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      body: '',\n      errors: {}\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          submitComment = _this$props.submitComment,\n          screamId = _this$props.screamId;\n      var body = _this.state.body;\n      submitComment(screamId, {\n        body: body\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.UI.errors) {\n        this.setState({\n          errors: nextProps.UI.errors\n        });\n      }\n\n      if (!nextProps.UI.errors && !nextProps.UI.loading) {\n        this.setState({\n          body: ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          authenticated = _this$props2.authenticated;\n      var errors = this.state.errors;\n      var commentFormMarkup = authenticated ? React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"body\",\n        type: \"text\",\n        label: \"Comment on scream\",\n        error: errors.comment ? true : false,\n        helperText: errors.comment,\n        value: this.state.body,\n        onChange: this.handleChange,\n        fullWidth: true,\n        className: classes.textField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"hr\", {\n        className: classes.visibleSeparator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })) : null;\n      return commentFormMarkup;\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nCommentForm.propTypes = {\n  submitComment: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n  authenticated: PropTypes.bool.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    UI: state.UI,\n    authenticated: state.user.authenticated\n  };\n};\n\nexport default connect(mapStateToProps, {\n  submitComment: submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["D:\\sem 3\\SE\\SE20_Project1\\social_media_client\\src\\components\\scream\\CommentForm.js"],"names":["React","Component","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","styles","theme","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","screamId","nextProps","UI","loading","classes","authenticated","commentFormMarkup","textAlign","comment","textField","button","visibleSeparator","propTypes","func","isRequired","object","string","bool","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme\r\n});\r\n\r\nclass CommentForm extends Component {\r\n  state = {\r\n    body: '',\r\n    errors: {}\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: '' });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { submitComment, screamId } = this.props;\r\n    const { body } = this.state;\r\n    submitComment(screamId, { body: body });\r\n  };\r\n\r\n  render() {\r\n    const { classes, authenticated } = this.props;\r\n    const { errors } = this.state;\r\n\r\n    const commentFormMarkup = authenticated ? (\r\n      <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            name=\"body\"\r\n            type=\"text\"\r\n            label=\"Comment on scream\"\r\n            error={errors.comment ? true : false}\r\n            helperText={errors.comment}\r\n            value={this.state.body}\r\n            onChange={this.handleChange}\r\n            fullWidth\r\n            className={classes.textField}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n        <hr className={classes.visibleSeparator} />\r\n      </Grid>\r\n    ) : null;\r\n    return commentFormMarkup;\r\n  }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  submitComment: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  authenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  UI: state.UI,\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { submitComment }\r\n)(withStyles(styles)(CommentForm));\r\n"]},"metadata":{},"sourceType":"module"}